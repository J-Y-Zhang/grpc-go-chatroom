// License header (if applicable)
// File overview
// Syntax
// Package
// Imports (sorted)
// File options
// Everything else

syntax = "proto3";
package chat;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "./chat";

service ChatService {
  rpc LogIn(LoginReq) returns (LoginResp) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "LogIn to the chatroom"
      description: "LogIn to the chatroom, it takes username and returns a JWT token"
    };
    option (google.api.http) = {
      post: "/login"
      body: "*"
    };
  }

  rpc LogOut(Empty) returns (Empty);

  rpc ReceiveMessage(Message) returns (Empty);

  rpc Chat(stream Message) returns (stream Message);
}

message Empty {}

message LoginReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      // I never set `title`. So I write this just for record.
      title: "LoginReq"
      description: "LoginReq is the request message for LogIn, include a not empty username."
      required: ["username"]
    }

    // When using Apifox I don't need to set `example` cause it has a handy tool for this.
    // So I write this just for record.
    example: "{\"username\": \"Alice\"}"
  };
  string username = 1;
}

message LoginResp {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "LoginResp is the response message for LogIn, include a not empty JWT token which encoded username in it."
      required: ["token"]
    }
  };
  string token = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The JWT token, encoded username in it"}];
}

message Message {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      description: "Chat room message, include timestamp and text."
      required: [
        "timestamp",
        "text"
      ]
    }
  };
  string text = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The text of the message, include username"}];

  int64 timestamp = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Timestamp when the user sent the message locally"}];
}
